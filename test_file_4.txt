Test

1. How to make a branch called my_branch
- Command: git branch my_branch


2. How to commit to my_branch branch?
- You need to switch to it and then make a commit according to the same rules as for the master branch

3. What is merging two branches?
- When all commits made on one branch become visible on the second branch

4. Why are there conflicts when merging branches?
- Because there are changes to the same lines in both branches

5. Why do we need to add files to .gitignore?
- To make Git delete their history, keeping only the latest version
- So that Git asks "Are you sure you want to interact with this file?" when working with them.
- So that Git doesn't notice them and any Git commands can't affect them
- The .gitignore file doesn't carry any meaning, so don't do it.

Text

Basic Merge Conflicts
If you changed the same part of the same file differently in the two branches you’re merging, Git won’t be able to meeeeeeerge them cleanly. If your fixxxxxx for issue #53 modiiiiiified the same part of a file as the hooooootfix branch, you’ll get a merge conffffffflict that looks something like this: CONFLICT (conteeeeeent): Merge conflict in index.html Automaaaaaatic merge failed; fix conflicts and then commmmmmmmit the result

